Grammar

    0 $accept: Program $end

    1 Program: block

    2 $@1: %empty

    3 block: '{' $@1 decls stmts '}'

    4 decls: INT IDs ';'
    5      | FLOAT IDs ';'
    6      | DOUBLE IDs ';'
    7      | CHAR IDs ';'

    8 IDs: IDs ',' ID
    9    | ID
   10    | ID '=' expr

   11 stmts: stmts stmt
   12      | %empty

   13 stmt: expr ';'

   14 $@2: %empty

   15 $@3: %empty

   16 $@4: %empty

   17 $@5: %empty

   18 $@6: %empty

   19 $@7: %empty

   20 $@8: %empty

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

   22 $@9: %empty

   23 $@10: %empty

   24 $@11: %empty

   25 stmt: WHILE $@9 '(' $@10 expr ')' $@11 stmt

   26 $@12: %empty

   27 $@13: %empty

   28 $@14: %empty

   29 $@15: %empty

   30 $@16: %empty

   31 $@17: %empty

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt
   33     | block

   34 optexpr: expr
   35        | %empty

   36 expr: ID '=' expr
   37     | rel

   38 rel: rel RELOP add
   39    | add

   40 add: add '+' term
   41    | add '-' term
   42    | term

   43 term: term '*' factor
   44     | term '/' factor
   45     | factor

   46 factor: '(' expr ')'
   47       | NUM
   48       | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 21 25 32 46
')' (41) 21 25 32 46
'*' (42) 43
'+' (43) 40
',' (44) 8
'-' (45) 41
'/' (47) 44
';' (59) 4 5 6 7 13 32
'=' (61) 10 36
'{' (123) 3
'}' (125) 3
error (256)
NUM (258) 47
ID (259) 8 9 10 36 48
IF (260) 21
ELSE (261) 21
WHILE (262) 25
FOR (263) 32
RELOP (264) 38
INT (265) 4
FLOAT (266) 5
DOUBLE (267) 6
CHAR (268) 7


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
Program (26)
    on left: 1, on right: 0
block (27)
    on left: 3, on right: 1 33
$@1 (28)
    on left: 2, on right: 3
decls (29)
    on left: 4 5 6 7, on right: 3
IDs (30)
    on left: 8 9 10, on right: 4 5 6 7 8
stmts (31)
    on left: 11 12, on right: 3 11
stmt (32)
    on left: 13 21 25 32 33, on right: 11 21 25 32
$@2 (33)
    on left: 14, on right: 21
$@3 (34)
    on left: 15, on right: 21
$@4 (35)
    on left: 16, on right: 21
$@5 (36)
    on left: 17, on right: 21
$@6 (37)
    on left: 18, on right: 21
$@7 (38)
    on left: 19, on right: 21
$@8 (39)
    on left: 20, on right: 21
$@9 (40)
    on left: 22, on right: 25
$@10 (41)
    on left: 23, on right: 25
$@11 (42)
    on left: 24, on right: 25
$@12 (43)
    on left: 26, on right: 32
$@13 (44)
    on left: 27, on right: 32
$@14 (45)
    on left: 28, on right: 32
$@15 (46)
    on left: 29, on right: 32
$@16 (47)
    on left: 30, on right: 32
$@17 (48)
    on left: 31, on right: 32
optexpr (49)
    on left: 34 35, on right: 32
expr (50)
    on left: 36 37, on right: 10 13 21 25 34 36 46
rel (51)
    on left: 38 39, on right: 37 38
add (52)
    on left: 40 41 42, on right: 38 39 40 41
term (53)
    on left: 43 44 45, on right: 40 41 42 43 44
factor (54)
    on left: 46 47 48, on right: 43 44 45


State 0

    0 $accept: . Program $end

    '{'  shift, and go to state 1

    Program  go to state 2
    block    go to state 3


State 1

    3 block: '{' . $@1 decls stmts '}'

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: block .

    $default  reduce using rule 1 (Program)


State 4

    3 block: '{' $@1 . decls stmts '}'

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    DOUBLE  shift, and go to state 8
    CHAR    shift, and go to state 9

    decls  go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    4 decls: INT . IDs ';'

    ID  shift, and go to state 11

    IDs  go to state 12


State 7

    5 decls: FLOAT . IDs ';'

    ID  shift, and go to state 11

    IDs  go to state 13


State 8

    6 decls: DOUBLE . IDs ';'

    ID  shift, and go to state 11

    IDs  go to state 14


State 9

    7 decls: CHAR . IDs ';'

    ID  shift, and go to state 11

    IDs  go to state 15


State 10

    3 block: '{' $@1 decls . stmts '}'

    $default  reduce using rule 12 (stmts)

    stmts  go to state 16


State 11

    9 IDs: ID .
   10    | ID . '=' expr

    '='  shift, and go to state 17

    $default  reduce using rule 9 (IDs)


State 12

    4 decls: INT IDs . ';'
    8 IDs: IDs . ',' ID

    ';'  shift, and go to state 18
    ','  shift, and go to state 19


State 13

    5 decls: FLOAT IDs . ';'
    8 IDs: IDs . ',' ID

    ';'  shift, and go to state 20
    ','  shift, and go to state 19


State 14

    6 decls: DOUBLE IDs . ';'
    8 IDs: IDs . ',' ID

    ';'  shift, and go to state 21
    ','  shift, and go to state 19


State 15

    7 decls: CHAR IDs . ';'
    8 IDs: IDs . ',' ID

    ';'  shift, and go to state 22
    ','  shift, and go to state 19


State 16

    3 block: '{' $@1 decls stmts . '}'
   11 stmts: stmts . stmt

    NUM    shift, and go to state 23
    ID     shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    FOR    shift, and go to state 27
    '{'    shift, and go to state 1
    '}'    shift, and go to state 28
    '('    shift, and go to state 29

    block   go to state 30
    stmt    go to state 31
    expr    go to state 32
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 17

   10 IDs: ID '=' . expr

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    expr    go to state 37
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 18

    4 decls: INT IDs ';' .

    $default  reduce using rule 4 (decls)


State 19

    8 IDs: IDs ',' . ID

    ID  shift, and go to state 38


State 20

    5 decls: FLOAT IDs ';' .

    $default  reduce using rule 5 (decls)


State 21

    6 decls: DOUBLE IDs ';' .

    $default  reduce using rule 6 (decls)


State 22

    7 decls: CHAR IDs ';' .

    $default  reduce using rule 7 (decls)


State 23

   47 factor: NUM .

    $default  reduce using rule 47 (factor)


State 24

   36 expr: ID . '=' expr
   48 factor: ID .

    '='  shift, and go to state 39

    $default  reduce using rule 48 (factor)


State 25

   21 stmt: IF . $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    $default  reduce using rule 14 ($@2)

    $@2  go to state 40


State 26

   25 stmt: WHILE . $@9 '(' $@10 expr ')' $@11 stmt

    $default  reduce using rule 22 ($@9)

    $@9  go to state 41


State 27

   32 stmt: FOR . $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    $default  reduce using rule 26 ($@12)

    $@12  go to state 42


State 28

    3 block: '{' $@1 decls stmts '}' .

    $default  reduce using rule 3 (block)


State 29

   46 factor: '(' . expr ')'

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    expr    go to state 43
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 30

   33 stmt: block .

    $default  reduce using rule 33 (stmt)


State 31

   11 stmts: stmts stmt .

    $default  reduce using rule 11 (stmts)


State 32

   13 stmt: expr . ';'

    ';'  shift, and go to state 44


State 33

   37 expr: rel .
   38 rel: rel . RELOP add

    RELOP  shift, and go to state 45

    $default  reduce using rule 37 (expr)


State 34

   39 rel: add .
   40 add: add . '+' term
   41    | add . '-' term

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47

    $default  reduce using rule 39 (rel)


State 35

   42 add: term .
   43 term: term . '*' factor
   44     | term . '/' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 42 (add)


State 36

   45 term: factor .

    $default  reduce using rule 45 (term)


State 37

   10 IDs: ID '=' expr .

    $default  reduce using rule 10 (IDs)


State 38

    8 IDs: IDs ',' ID .

    $default  reduce using rule 8 (IDs)


State 39

   36 expr: ID '=' . expr

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    expr    go to state 50
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 40

   21 stmt: IF $@2 . '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    '('  shift, and go to state 51


State 41

   25 stmt: WHILE $@9 . '(' $@10 expr ')' $@11 stmt

    '('  shift, and go to state 52


State 42

   32 stmt: FOR $@12 . '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    '('  shift, and go to state 53


State 43

   46 factor: '(' expr . ')'

    ')'  shift, and go to state 54


State 44

   13 stmt: expr ';' .

    $default  reduce using rule 13 (stmt)


State 45

   38 rel: rel RELOP . add

    NUM  shift, and go to state 23
    ID   shift, and go to state 55
    '('  shift, and go to state 29

    add     go to state 56
    term    go to state 35
    factor  go to state 36


State 46

   41 add: add '-' . term

    NUM  shift, and go to state 23
    ID   shift, and go to state 55
    '('  shift, and go to state 29

    term    go to state 57
    factor  go to state 36


State 47

   40 add: add '+' . term

    NUM  shift, and go to state 23
    ID   shift, and go to state 55
    '('  shift, and go to state 29

    term    go to state 58
    factor  go to state 36


State 48

   43 term: term '*' . factor

    NUM  shift, and go to state 23
    ID   shift, and go to state 55
    '('  shift, and go to state 29

    factor  go to state 59


State 49

   44 term: term '/' . factor

    NUM  shift, and go to state 23
    ID   shift, and go to state 55
    '('  shift, and go to state 29

    factor  go to state 60


State 50

   36 expr: ID '=' expr .

    $default  reduce using rule 36 (expr)


State 51

   21 stmt: IF $@2 '(' . $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    $default  reduce using rule 15 ($@3)

    $@3  go to state 61


State 52

   25 stmt: WHILE $@9 '(' . $@10 expr ')' $@11 stmt

    $default  reduce using rule 23 ($@10)

    $@10  go to state 62


State 53

   32 stmt: FOR $@12 '(' . optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    $default  reduce using rule 35 (optexpr)

    optexpr  go to state 63
    expr     go to state 64
    rel      go to state 33
    add      go to state 34
    term     go to state 35
    factor   go to state 36


State 54

   46 factor: '(' expr ')' .

    $default  reduce using rule 46 (factor)


State 55

   48 factor: ID .

    $default  reduce using rule 48 (factor)


State 56

   38 rel: rel RELOP add .
   40 add: add . '+' term
   41    | add . '-' term

    '-'  shift, and go to state 46
    '+'  shift, and go to state 47

    $default  reduce using rule 38 (rel)


State 57

   41 add: add '-' term .
   43 term: term . '*' factor
   44     | term . '/' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 41 (add)


State 58

   40 add: add '+' term .
   43 term: term . '*' factor
   44     | term . '/' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 40 (add)


State 59

   43 term: term '*' factor .

    $default  reduce using rule 43 (term)


State 60

   44 term: term '/' factor .

    $default  reduce using rule 44 (term)


State 61

   21 stmt: IF $@2 '(' $@3 . expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    expr    go to state 65
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 62

   25 stmt: WHILE $@9 '(' $@10 . expr ')' $@11 stmt

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    expr    go to state 66
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 63

   32 stmt: FOR $@12 '(' optexpr . ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    ';'  shift, and go to state 67


State 64

   34 optexpr: expr .

    $default  reduce using rule 34 (optexpr)


State 65

   21 stmt: IF $@2 '(' $@3 expr . ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    ')'  shift, and go to state 68


State 66

   25 stmt: WHILE $@9 '(' $@10 expr . ')' $@11 stmt

    ')'  shift, and go to state 69


State 67

   32 stmt: FOR $@12 '(' optexpr ';' . $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    $default  reduce using rule 27 ($@13)

    $@13  go to state 70


State 68

   21 stmt: IF $@2 '(' $@3 expr ')' . $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt

    $default  reduce using rule 16 ($@4)

    $@4  go to state 71


State 69

   25 stmt: WHILE $@9 '(' $@10 expr ')' . $@11 stmt

    $default  reduce using rule 24 ($@11)

    $@11  go to state 72


State 70

   32 stmt: FOR $@12 '(' optexpr ';' $@13 . optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    $default  reduce using rule 35 (optexpr)

    optexpr  go to state 73
    expr     go to state 64
    rel      go to state 33
    add      go to state 34
    term     go to state 35
    factor   go to state 36


State 71

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 . $@5 stmt $@6 ELSE $@7 $@8 stmt

    $default  reduce using rule 17 ($@5)

    $@5  go to state 74


State 72

   25 stmt: WHILE $@9 '(' $@10 expr ')' $@11 . stmt

    NUM    shift, and go to state 23
    ID     shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    FOR    shift, and go to state 27
    '{'    shift, and go to state 1
    '('    shift, and go to state 29

    block   go to state 30
    stmt    go to state 75
    expr    go to state 32
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 73

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr . $@14 ';' $@15 optexpr $@16 ')' $@17 stmt

    $default  reduce using rule 28 ($@14)

    $@14  go to state 76


State 74

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 . stmt $@6 ELSE $@7 $@8 stmt

    NUM    shift, and go to state 23
    ID     shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    FOR    shift, and go to state 27
    '{'    shift, and go to state 1
    '('    shift, and go to state 29

    block   go to state 30
    stmt    go to state 77
    expr    go to state 32
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 75

   25 stmt: WHILE $@9 '(' $@10 expr ')' $@11 stmt .

    $default  reduce using rule 25 (stmt)


State 76

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 . ';' $@15 optexpr $@16 ')' $@17 stmt

    ';'  shift, and go to state 78


State 77

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt . $@6 ELSE $@7 $@8 stmt

    $default  reduce using rule 18 ($@6)

    $@6  go to state 79


State 78

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' . $@15 optexpr $@16 ')' $@17 stmt

    $default  reduce using rule 29 ($@15)

    $@15  go to state 80


State 79

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 . ELSE $@7 $@8 stmt

    ELSE  shift, and go to state 81


State 80

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 . optexpr $@16 ')' $@17 stmt

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 29

    $default  reduce using rule 35 (optexpr)

    optexpr  go to state 82
    expr     go to state 64
    rel      go to state 33
    add      go to state 34
    term     go to state 35
    factor   go to state 36


State 81

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE . $@7 $@8 stmt

    $default  reduce using rule 19 ($@7)

    $@7  go to state 83


State 82

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr . $@16 ')' $@17 stmt

    $default  reduce using rule 30 ($@16)

    $@16  go to state 84


State 83

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 . $@8 stmt

    $default  reduce using rule 20 ($@8)

    $@8  go to state 85


State 84

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 . ')' $@17 stmt

    ')'  shift, and go to state 86


State 85

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 . stmt

    NUM    shift, and go to state 23
    ID     shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    FOR    shift, and go to state 27
    '{'    shift, and go to state 1
    '('    shift, and go to state 29

    block   go to state 30
    stmt    go to state 87
    expr    go to state 32
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 86

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' . $@17 stmt

    $default  reduce using rule 31 ($@17)

    $@17  go to state 88


State 87

   21 stmt: IF $@2 '(' $@3 expr ')' $@4 $@5 stmt $@6 ELSE $@7 $@8 stmt .

    $default  reduce using rule 21 (stmt)


State 88

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 . stmt

    NUM    shift, and go to state 23
    ID     shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    FOR    shift, and go to state 27
    '{'    shift, and go to state 1
    '('    shift, and go to state 29

    block   go to state 30
    stmt    go to state 89
    expr    go to state 32
    rel     go to state 33
    add     go to state 34
    term    go to state 35
    factor  go to state 36


State 89

   32 stmt: FOR $@12 '(' optexpr ';' $@13 optexpr $@14 ';' $@15 optexpr $@16 ')' $@17 stmt .

    $default  reduce using rule 32 (stmt)
